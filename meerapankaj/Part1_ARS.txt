
Executing adhoc commands in remote machine (ARS)

Example:

ansible all -i 15.153.133.61, -m yum -a "state=present name=httpd" -u root -k


[root@prmvm3 ~]# whereis httpd
httpd: /usr/sbin/httpd /usr/lib64/httpd /etc/httpd /usr/share/httpd /usr/share/man/man8/httpd.8.gz

*******************************************************************************************
Program 1 – Write a Ansible Adhoc Commands to create a group called “deploy

ansible all -i 15.153.133.61, -m group -a "name=deploy" -u root -k

[root@prmvm2 ~]# ansible all -i 15.153.133.61, -m group -a "name=deploy" -u root -k
SSH password:
15.153.133.61 | CHANGED => {
    "ansible_facts": {
        "discovered_interpreter_python": "/usr/bin/python"
    },
    "changed": true,
    "gid": 54324,
    "name": "deploy",
    "state": "present",
    "system": false
}

In the remote machinge:
[root@prmvm3 ~]# grep 'deploy' /etc/group
deploy:x:54324:


*************************************************************************************************

Program 2 – Write a Ansible Adhoc Commands to create a user called “deploy-user” which is part of group called “deploy” and with /bin/bash shell.


ansible all -i 15.153.133.61, -m user -a "name=deploy-user shell=/bin/bash groups=deploy append=yes" -u root -k


[root@prmvm2 ~]# ansible all -i 15.153.133.61, -m user -a "name=deploy-user shell=/bin/bash groups=deploy append=yes" -u root -k
SSH password:
15.153.133.61 | CHANGED => {
    "ansible_facts": {
        "discovered_interpreter_python": "/usr/bin/python"
    },
    "changed": true,
    "comment": "",
    "create_home": true,
    "group": 54325,
    "groups": "deploy",
    "home": "/home/deploy-user",
    "name": "deploy-user",
    "shell": "/bin/bash",
    "state": "present",
    "system": false,
    "uid": 54322
}

*************************************************************************************

Program 3: Write a Ansible Adhoc commands install package named “httpd” in RHEL/centos.

ansible all -i 15.153.133.61, -m yum -a "state=present name=httpd" -u deploy-user -k

[root@prmvm2 ~]# ansible all -i 15.153.133.61, -m yum -a "state=present name=httpd" -u deploy-user -k
SSH password:
15.153.133.61 | SUCCESS => {
    "ansible_facts": {
        "discovered_interpreter_python": "/usr/bin/python"
    },
    "changed": false,
    "msg": "",
    "rc": 0,
    "results": [
        "httpd-2.4.6-90.0.1.el7.x86_64 providing httpd is already installed"
    ]
}

*********************************************************************************


Program 4:Write a Ansible Adhoc commands to start and enable the service named “httpd”


ansible all -i 15.153.133.61, -m service -a "state=started name=httpd" -u deploy-user -k -b

[root@prmvm2 deploy-user]# ansible all -i 15.153.133.61, -m service -a "state=started name=httpd" -u deploy-user -k -b
SSH password:

**********************************************************************************

Program 5: Write a Ansible commands to create a file called “index.html” in /var/www/html with some dummy html contents.


ansible all -i 15.153.133.61, -m copy -a "src=index.html dest=/var/www/html/" -u deploy-user -k -b



[root@prmvm2 deploy-user]#  ansible all -i 15.153.133.61, -m copy -a "src=index.html dest=/var/www/html/" -u deploy-user -k -b
SSH password:
15.153.133.61 | CHANGED => {
    "ansible_facts": {
        "discovered_interpreter_python": "/usr/bin/python"
    },
    "changed": true,
    "checksum": "7f547224164fa4fff33bb20e220bc5e59e503d41",
    "dest": "/var/www/html/index.html",
    "gid": 0,
    "group": "root",
    "md5sum": "e927630f863ba36fb68792b90f132848",
    "mode": "0644",
    "owner": "root",
    "secontext": "system_u:object_r:httpd_sys_content_t:s0",
    "size": 11,
    "src": "/home/deploy-user/.ansible/tmp/ansible-tmp-1570601676.65-142003653212974/source",
    "state": "file",
    "uid": 0
}



*************************************************************************

Program 6 – Write a Ansible commands to copy a file called “second.html” in /var/www/html/second.html with some dummy html contents.

ansible all -i 15.153.133.61, -m file -a "state=touch dest=/var/www/html/second.html" -u deploy-user -k -b


[root@prmvm2 local]# ansible localhost -m file -a "state=touch dest=/var/www/html/second.html"
 [WARNING]: No inventory was parsed, only implicit localhost is available

localhost | CHANGED => {
    "changed": true,
    "dest": "/var/www/html/second.html",
    "gid": 0,
    "group": "root",
    "mode": "0644",
    "owner": "root",
    "size": 0,
    "state": "file",
    "uid": 0
}


**********************************************************************

Program 7: Write a Ansible commands to install a package called “git”, “wget”.


ansible all -i 15.153.133.61, -m yum -a "state=present name=git" -u deploy-user -k -b
ansible all -i 15.153.133.61, -m yum -a "state=present name=wget" -u deploy-user -k -b



[root@prmvm2 deploy-user]# ansible all -i 15.153.133.61, -m yum -a "state=present name=wget" -u deploy-user -k -b
SSH password:
15.153.133.61 | SUCCESS => {
    "ansible_facts": {
        "discovered_interpreter_python": "/usr/bin/python"
    },
    "changed": false,
    "msg": "",
    "rc": 0,
    "results": [
        "wget-1.14-18.el7_6.1.x86_64 providing wget is already installed"
    ]
}


**************************************************************************************

Program 8 – Write a Ansible Adhoc commands to clone git repo. https://github.com/scmgalaxy/ansible-role-template.


ansible all -i 15.153.133.61, -m git -a "repo=https://github.com/scmgalaxy/ansible-role-template dest=/opt/hpsdp/meera" -u deploy-user -k -b


[root@prmvm2 deploy-user]# ansible all -i 15.153.133.61, -m git -a "repo=https://github.com/scmgalaxy/ansible-role-template dest=/opt/hpsdp/meera" -u deploy-user -k -b
SSH password:
15.153.133.61 | CHANGED => {
    "after": "d3eefe03c1bb6c9b0e1574347523174a26d015ff",
    "ansible_facts": {
        "discovered_interpreter_python": "/usr/bin/python"
    },
    "before": null,
    "changed": true
}


******************************************************************************
